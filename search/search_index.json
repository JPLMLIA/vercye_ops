{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"VeRCYE Documentation","text":"<p>This documentation aims to provides a comprehensive guide to running the Versatile Crop Yield Estimate (VeRCYe) pipeline. The original VeRCYe algorithm is published here.</p> <p>Currently the documentation is a work in progress, so please visit again soon.</p>"},{"location":"#features","title":"Features","text":"<ul> <li>Tools to greatly reduce manual effort required for executing the VERYCE crop yield estimate pipeline.</li> <li>All workflow steps are wrapped in a well-documented CLI interface to permit step by step execution.</li> <li>The core CLI steps are also wrapped in a Snakemake-based data processing pipeline to batch execute yield estimates in an easy to run and reproducible manner.</li> </ul>"},{"location":"LAI/intro/","title":"Introduction","text":"<p>The VeRCYE algorithms relies on identifying APSIM simulations that best match remotely sensed LAI data. We provide an additional pipeline to create such LAI estimates from Sentinel-2 data. The LAI creation is not included in the standard VeRCYE pipeline, as it requires downloading\\ and processing large amounts of data, which we want to decouple from the execution of the simulation. Once generated, LAI data for a region can always be reused with different VeRCYE configuration.</p> <p>The documentation on how to use the LAI pipeline will follow soon.</p>"},{"location":"Vercye/inputs/","title":"VeRCYe Pipeline Documentation","text":""},{"location":"Vercye/inputs/#overview","title":"Overview","text":"<p>The VeRCYe pipeline enables large-scale yield studies by organizing simulation data within a structured directory and processing it with <code>snakemake</code>. This document details the required input files, directory structure, and configurable parameters.</p>"},{"location":"Vercye/inputs/#1-yield-study-setup","title":"1. Yield Study Setup","text":""},{"location":"Vercye/inputs/#simulation-head-directory","title":"Simulation Head Directory","text":"<p>Your yield study is structured within a single directory, referred to as the simulation head directory. This directory must follow a predefined structure to ensure compatibility with the pipeline.</p>"},{"location":"Vercye/inputs/#directory-structure","title":"Directory Structure","text":"<pre><code>head_dir/\n|   snakemake_config.yaml\n|---Year1/\n|   |---TimePoint-1/\n|   |   |   groundtruth.csv (optional)\n|   |   |---region1/\n|   |   |   |   region1.geojson\n|   |   |   |   region1_template.apsimx\n|   |---TimePoint-N/\n|       |   groundtruth.csv (optional)\n|       |---regionN/\n|           |   regionN.geojson\n|           |   regionN_template.apsimx\n|---Year2/\n    ...\n</code></pre> <p>Each year contains timepoints, and each timepoint contains regions with their respective <code>geojson</code> and <code>apsimx</code> template files. The names in this structure are just descriptive placeholders and should be adjusted as described below.</p>"},{"location":"Vercye/inputs/#2-region-geojson-files","title":"2. Region GeoJSON Files","text":""},{"location":"Vercye/inputs/#purpose","title":"Purpose","text":"<p>Each Region of Interest (ROI) is represented as a GeoJSON file within its respective timepoint directory.</p>"},{"location":"Vercye/inputs/#converting-shapefiles-to-geojson","title":"Converting Shapefiles to GeoJSON","text":"<p>We expect you data ti initially be in .shp (shapefile) format. Use the provided scripts to convert it: - Single Administrative Level: Use <code>apsim/convert_shapefile_to_geojson.py</code> if the shapefile contains a uniform administrative level. - Mixed Administrative Levels: Use <code>apsim/prepare_shapefile.py</code> to standardize the shapefile before conversion.</p> <p>[!CAUTION] Ensure your shapefiles contains only geometries at the same administrative level if skipping <code>prepare_shapefile.py</code>!</p>"},{"location":"Vercye/inputs/#file-naming-convention","title":"File Naming Convention","text":"<p>Each GeoJSON file must follow the format:</p> <pre><code>regionname.geojson\n</code></pre> <p>For example, if studying California, the file structure would be:</p> <pre><code>2024/T-0/california/california.geojson\n</code></pre> <p>If you do not use our conversion from shapefile to GeoJSON, you will need to manually ensure that each GeoJSON contains a centroid column that has the same format as extracted in <code>convert_shapefile_to_geojson.py</code>.</p>"},{"location":"Vercye/inputs/#3-years-and-timepoints","title":"3. Years and Timepoints","text":""},{"location":"Vercye/inputs/#defining-years","title":"Defining Years","text":"<p>Years should be named numerically (e.g., <code>2024</code>, <code>2025</code>) to represent different simulation periods.</p>"},{"location":"Vercye/inputs/#defining-timepoints","title":"Defining Timepoints","text":"<p>Each timepoint represents a simulation scenario, e.g., using all available meteorological data vs. limiting it to 30 days before the latest observation.</p> <p>Each timepoint must define: - APSIM Simulation Start &amp; End Dates - Meteorological Data Start &amp; End Dates - LAI (Leaf Area Index) Data Start &amp; End Dates</p> <p>Years and Timepoints are referenced in <code>snakemake_config.yaml</code> using their respective names. Therefore the folder names must match these.</p>"},{"location":"Vercye/inputs/#4-apsimx-templates","title":"4. APSIMX Templates","text":""},{"location":"Vercye/inputs/#purpose_1","title":"Purpose","text":"<p>Each region and timepoint requires an APSIMX template (<code>regionname_template.apsimx</code>). This file defines crop growth parameters and the dates (<code>Models.Clock</code>) in the APSIM file must align with the simulation dates set in <code>snakemake_config.yaml</code>.</p> <p>Adjustments for soil properties and simulation constraints must be manually configured with domain knowledge.</p>"},{"location":"Vercye/inputs/#5-validation-data-optional","title":"5. Validation Data (Optional)","text":"<p>If ground-truth yield data is available, it should be included as <code>groundtruth.csv</code> in the corresponding timepoint directory.</p>"},{"location":"Vercye/inputs/#refernece-csv-specification","title":"Refernece CSV Specification","text":"Column Name Description <code>region</code> Name matching GeoJSON folder <code>reported_mean_yield_kg_ha</code> Mean yield (kg/ha), if available <code>reported_yield_kg</code> Total yield (kg) (optional, used to derive mean yield) <p>If <code>reported_yield_kg</code> is provided, the mean yield is computed as:</p> <pre><code>mean_yield_kg_ha = reported_yield_kg / cropland_area_ha\n</code></pre> <p>Validation data is optional and only needed for timepoints where it is available.</p>"},{"location":"Vercye/inputs/#6-snakemake-configuration-snakemake_configyaml","title":"6. Snakemake Configuration (<code>snakemake_config.yaml</code>)","text":"<p>This file defines the study parameters and links the simulation head directory with the pipeline. You will have to adapt this fill for each yield study. An example configuration can be found here example configuration file. We reccomend, to use this as a template for adjustment. The following section describes the meaning of the paramters, but does not represent the syntac for how to organize the config. For this please refer to the example.</p>"},{"location":"Vercye/inputs/#key-parameters","title":"Key Parameters","text":""},{"location":"Vercye/inputs/#general-settings","title":"General Settings","text":"<ul> <li><code>platform</code>: Choose between <code>'local'</code> or <code>'umd'</code> for dependency management.</li> <li><code>sim_study_head_dir</code>: Path to the simulation head directory.</li> <li><code>regions</code>: List of included regions. Must match folder names of regions.</li> <li><code>years</code>: List of included years (<code>int</code>). Must match year folder names.</li> <li><code>timepoints</code>: List of included timepoints. Must match timepoint folder names.</li> <li><code>roi_name</code>: Descriptive Name of the complete area of the yield study. Freely choosable.</li> <li><code>keep_apsim_db_files</code>: Delete actual APSIM DB files after processing and reporting to free space.(<code>True</code>/<code>False</code>).</li> </ul>"},{"location":"Vercye/inputs/#apsim-parameters-apsim_params","title":"APSIM Parameters (<code>apsim_params</code>)","text":"<ul> <li><code>precipitation_source</code>: Choose between <code>'NASA_POWER'</code> or <code>'CHIRPS'</code>. If you are using CHIRPS, you will have to manually download the precipitation data before starting the pipeline (apsim/download_chirps_data.py).</li> <li><code>precipitation_agg_method</code>: Aggregation method for precipitation data (<code>mean</code> or <code>centroid</code>). <code>'NASA_POWER'</code> only supporting <code>centroid</code> currently.</li> <li><code>fallback_on_nasa_power_centroid</code>: Set <code>True</code> to use <code>NASA_POWER</code> data if <code>CHIRPS</code> is unavailable. CHIRPS only provides coverage from -50 to 50 degrees.</li> <li><code>chirps_dir</code>: Directory containing CHIRPS data.</li> <li><code>time_bounds</code>: Defines timepoint parameters:</li> <li><code>sim_start_date</code>, <code>sim_end_date</code>: Start/End date of the simulation in APSIM.</li> <li><code>nasa_power_start_date</code>, <code>nasa_power_end_date</code>: Start/End date from when to include metereological data into APSIM.</li> </ul>"},{"location":"Vercye/inputs/#lai-parameters-lai_params","title":"LAI Parameters (<code>lai_params</code>)","text":"<ul> <li><code>lai_dir</code>: Directory for LAI data.</li> <li><code>lai_region</code>: Region name with naming convention (<code>{region}_{date}_{resolution}m_LAI.tif</code>).</li> <li><code>lai_resolution</code>: Spatial resolutin, used for matching as above. In meters/pixel.</li> <li><code>crop_name</code>: Specify crop (<code>wheat</code> or <code>maize</code>). Is related to the cropname defined in APSIM.</li> <li><code>use_crop_adjusted_lai</code>: Adjust LAI data for the crop specified (<code>True</code>/<code>False</code>).</li> <li><code>lai_analysis_mode</code>: Set to <code>'raster'</code>.</li> <li><code>time_bounds</code>: LAI start and end dates for each year.</li> <li><code>crop_mask</code>: Path to crop mask files for each year.</li> </ul>"},{"location":"Vercye/inputs/#matching-parameters-matching_params","title":"Matching Parameters (<code>matching_params</code>)","text":"<ul> <li><code>target_epsg</code>: EPSG code for coordinate reference system used for area calculation. Should be choosen with care to minimize distortions.</li> </ul>"},{"location":"Vercye/inputs/#apsim-execution-apsim_execution","title":"APSIM Execution (<code>apsim_execution</code>)","text":"<ul> <li><code>use_docker</code>: Set <code>True</code> to run APSIM in Docker.</li> <li><code>docker.image</code>: Docker image (<code>apsiminitiative/apsimng</code>).</li> <li><code>docker.platform</code>: Device platform (e.g., <code>'linux/amd64'</code>).</li> <li><code>local.executable_fpath</code>: Path to APSIM executable.</li> <li><code>local.n_jobs</code>: Number of threads (<code>-1</code> uses APSIM default).</li> </ul>"},{"location":"Vercye/inputs/#scripts-configuration","title":"Scripts Configuration","text":"<ul> <li>Paths to scripts used within the Snakemake pipeline.</li> </ul>"},{"location":"Vercye/outputs/","title":"Outputs","text":""},{"location":"Vercye/outputs/#overview","title":"Overview","text":"<p>The VeRCYe pipeline generates outputs at multiple levels of abstraction, including: - Pixel-wise yield predictions - Predictions for each region of interest (ROI) - Aggregated insights across multiple ROIs</p> <p>This document details all output artifacts and their computation methods.</p>"},{"location":"Vercye/outputs/#1-per-region-and-timepoint-outputs","title":"1. Per Region (-and timepoint) Outputs","text":""},{"location":"Vercye/outputs/#reports","title":"Reports","text":"<ul> <li><code>yield_report.html</code>: This summarize the yield study on this region and timepoint. The displayed values are the following:<ul> <li>Number of simulation traces in mean data: The number of APSIM simulations that best match remotely sensed LAI data, after filtering out simulations in <code>match_sim_rs_lai.py</code>. We referr to these as 'matched'</li> <li>Date range: APSIM simulation date range.</li> <li>Mean yield rate: See <code>converted_map_yield_estimate.csv</code> under <code>mean_yield_kg_ha</code>.</li> <li>Production: See <code>converted_map_yield_estimate.csv</code> under <code>total_yield_production_ton</code>.</li> <li>LAI filtered on step x: APSIM Simulated <code>Wheat.Leaf.LAI</code> (or <code>Maize.Leaf.LAI</code>) for a specific simulation and simulation date, with the simulation being filtered out at step x, as defined in <code>match_sim_rs_lai.py</code>.</li> <li>Yield filtered on step x: APSIM Simulated yield for a specific simulation and simulation date, with the simulation being filtered out at step x, as defined in <code>match_sim_rs_lai.py</code>. Yield in kg/ha.</li> <li>RS mean LAI: The remotely sensed mean LAI at each date. The mean is taken over the spatial axes, so the mean of the pixel values of all pixel locations that are within the regions geometry.</li> <li>Mean LAI: The mean simulated LAI eat each date. Hereby the mean for each date, is computed as the mean of all matched (not-filtered out) AP-SIM simulated <code>Wheat.Leaf.LAI</code> (or <code>Maize.Leaf.LAI</code>) values at that date. Yield in</li> <li>Mean Yield: Analogues to <code>Mean LAI</code> for the APSIM simulated yield. All simulated yield values are in kg/ha.</li> </ul> </li> <li><code>yield_report.png</code>: A non-interactive snapshot with lower resolution of the <code>.html</code> yield report.</li> <li><code>weather_report.html</code>: Allows to interactively inspect the meteorological data. All values except the rain graph are computed for the centroid of the region. For the rain graph, if the precipitation data source in the experiment is NASA_Power, this is also for the centroid. If the precipitation data source is CHIRPS, this might either be the value at the centroid or the mean of all CHIRPS values within the region, depending on what was specified in the configuration. </li> </ul>"},{"location":"Vercye/outputs/#maps","title":"Maps","text":"<ul> <li><code>yield_map.tif</code>: Raster output representing the yield in kg/ha per pixel. The pixel values are derived my multiplying the remotely sensed LAI with a conversion factor. The conversion factor is computed from the matched simulations of the region.</li> </ul>"},{"location":"Vercye/outputs/#detailed-outputs","title":"Detailed Outputs","text":"<ul> <li> <p><code>converted_map_yield_estimate.csv</code>: </p> <ul> <li>mean_yield_kg_ha: Mean yield based on pixel level yield predictions from <code>yield_map.tif</code>. Mean over all pixels estimates in kg/ha.</li> <li>median_yield_kg_ha: Median yield based on pixel level yield predictions from <code>yield_map.tif</code>. Medial over all pixel estimates in kg/ha. </li> <li>total_area_ha: Total cropland in region in ha. Computed from number of cropland pixels in region multiplied with the pixel size.</li> <li>total_yield_production_kg: Total yield from the region in kg. Sum over yield per pixel.</li> <li>total_yield_production_ton: <code>total_yield_production_kg</code> / 1000</li> </ul> </li> <li> <p><code>sim_matches.csv</code>: Contains aggregated statistics per APSIM simulation:</p> <ul> <li>SimulationID: The internal ID of the APSIM simulation.</li> <li>Max_Yield: The maximum yield that the APSIM simulation reaches during the specified simulation date range.</li> <li>Max_LAI: The maximum LAI that the APSIM simulation reaches during the specified simulation date range.</li> <li>StepFilteredOut: The step number at which the APSIM simulation was removed from matching candidates, as described in <code>match_sim_rs_lai.py</code>. If this field is empty/nan, the simultion was matched and not filtered out.</li> <li>Further details not publicly available at the moment.</li> </ul> </li> <li> <p><code>conversion_factor.csv</code>: Contains numerous values related to the APSIM simulations (and remotely sensed LAI). <code>Max_Yield</code> and <code>Max_LAI</code> as defined in <code>sim_matches.csv</code>.</p> <ul> <li>apsim_mean_yield_estimate_kg_ha: The mean of <code>Max_Yield</code> over the remaining APSIM simulations fter filtering out simulations as described in <code>match_sim_rs_lai.py</code>.</li> <li>apsim_max_matched_lai: The maximum <code>Max_Sim_LAI</code> value over all matched (filtered) APSIM simulations. </li> <li>apsim_max_matched_lai_date: The correspinding date on which <code>apsim_max_matched_lai</code> is reached.</li> <li>apsim_max_all_lai: The maximum <code>Max_Sim_LAI</code> value over all (not-filtered) APSIM simulations. </li> <li>apsim_max_all_lai_date: The correspinding date on which <code>apsim_max_all_lai</code> is reached.</li> <li>apsim_matched_std_yield_estimate_kg_ha: The standard deviation in kg/ha of <code>Max_Yield</code> over all matched (filtered) APSIM simulations.</li> <li>apsim_all_std_yield_estimate_kg_ha: The standard deviation in kg/ha of <code>Max_Yield</code> over all (not-filtered) APSIM simulations.</li> <li>apsim_matched_maxlai_std: The standard LAI deviation of <code>Max_Sim_LAI</code> over the matched (filtered) APSIM simulations.</li> <li>apsim_all_maxlai_std: The standard LAI deviation of <code>Max_Sim_LAI</code> over all (not-filtered) APSIM simulations.</li> <li>max_rs_lai: For each date the remotely sensed mean LAI is computed (negative values clipped to 0). Hereby the mean is taken spatially over the region. <code>max_rs_lai</code> then defines the maximum LAI value of these. </li> <li>max_rs_lai_date: The correspinding date of the <code>max_rs_lai</code> value.</li> <li>conversion_factor: The factor used to convert the remotely sensed LAI raster to yield estimates that are in kg/ha per pixel.</li> </ul> </li> <li> <p><code>LAI_STATS.csv</code>: Insights on the estimated LAI from the remotely sensed data.     Before computation all negative values are clipped to 0.</p> <ul> <li>Date</li> <li>n_pixels: Number of non-nan pixels in the estimated LAI raster for this date.</li> <li>interpolated: 1 if this LAI value is interpolated based on surrounding values since no remote sensed image was available on this date. 0 it is estimated with the ML model from the remotely sensed image.</li> <li>LAI mean: Mean estimated LAI value over all spatial locations at this date. </li> <li>LAI stddev: Standard deviation of LAI values over all spatial locations at this date.</li> <li>LAI mean adjusted: Mean estimated adjsuted LAI value over all spatial locations at this date. Adjustment is used to adjust for different crops e.g maize or wheat as specified in <code>3_analysis_LAI.py</code>.</li> <li>LAI stddev adjusted: Analogous to <code>LAI stddev</code> for the adjusted LAI.</li> </ul> </li> <li> <p><code>nasapower.csv</code>: Meteorological data fetched from nasapower for each date in the daterange. If CHIRPS was used for precipitation data, then <code>PRECTOTCORR</code> is replaced by CHIRPS data and an additional <code>NASA_POWER_PRECTOTCORR_UNUSED</code> column is added for comparison, which is not used for the simulation. Documentation of other columns will be added soon.</p> </li> <li> <p><code>weather.met</code>: Met file generated from <code>nasapower.csv*</code> for the APSIM simulations.</p> </li> <li> <p>c<code>ropmask_constrained.tif</code>: Binary cropmask (raster) constrained to the region.</p> </li> <li><code>LAI_MAX.tif</code>: Raster of the remotely sensed LAI given as the maximum value per pixel troughout the date range.</li> </ul>"},{"location":"Vercye/outputs/#2-aggregated-outputs","title":"2. Aggregated Outputs","text":"<p>The aggregated outputs are produced for each year-timepoint combination. They combine the artifacts from the indival regions into single files that are easier to work with. The filenames will contain suffixed defined as <code>yieldstudyname_totalROIname_year_timepoint</code>, to allow easier sharing of these results.</p> <ul> <li> <p><code>final_report_suffix.pdf</code>: This document gives a final, simple to understand overview of all regional results and preview images of the maps. The description of values not listed below is either documented under the regional output section or the validation outputs section.</p> <ul> <li>date range: Simulation start and end date</li> <li>total yield: The sum of the estimated yield of all regions.</li> <li>weighted mean yield: The total yield divided by the total cropland area.</li> <li>total cropland area: The sum of all the area of all ROIs in ha.</li> <li>crop productivity pixel level: Visualizes the crop productivity in kg/ha per pixel. Derived from the remotely sensed LAI data coupled with the APSIM simulation trough the conversion factor.</li> </ul> </li> </ul>"},{"location":"Vercye/outputs/#aggregated-maps","title":"Aggregated Maps","text":"<ul> <li><code>yield_map_suffix.png</code>: Preview image of all ROI boundaries with the corresponding mean and median yield in kg/ha.</li> <li> <p><code>aggregated_yield_map_preview_suffix.png</code>: Downsampled image preview of the all regional pixel-level yieldmaps merged into one.</p> </li> <li> <p><code>aggregated_yield_map_suffix.tif</code>: Spatially aggregated yield maps from all regions (See regional <code>yield_map.tif</code>).</p> </li> <li><code>aggregated_LAI_max_suffix.tif</code>: Spatially aggregated LAI_MAX maps from all regions (See regional <code>LAI_MAX.tif</code>).</li> <li><code>aggregated_cropmask_suffix.tif</code>: Spatially aggregated cropmasks from all regions (See regional <code>cropmask_constrained.tif</code>). </li> <li><code>aggregated_region_boundaries_suffix.geojson</code>: All regional geojsons merged into a single one for easier importing into GIS.</li> </ul>"},{"location":"Vercye/outputs/#aggregated-meteorological-insights","title":"Aggregated Meteorological Insights","text":"<ul> <li><code>aggregated_met_stats_suffix.pdf</code>: Averaged meteorological data per region visualized as a vector map. Includes statistics for the specific year and averaged over the last 20 years. Results are computed as per-year averages (grouped by location lat/lon) from the met files.</li> <li><code>aggregated_met_stats_suffix.tif</code>: Same met stats as in the pdf, but as a tif with the same resolution as LAI data. Facilitates analysis for field-scale studies.</li> </ul>"},{"location":"Vercye/outputs/#3-validation-outputs","title":"3. Validation Outputs","text":"<p>If reported (ground truth) data was provided, common metrics are written to the <code>final_report.html</code>.</p>"},{"location":"Vercye/outputs/#error-metrics","title":"Error Metrics","text":"<ul> <li>Mean Error (<code>mean_err_kg_ha</code>): The mean error computed as the mean over the yield errors (predicted_mean_yield - reported__mean_yield) of all study regions. Hereby the predicted and reported yield are the mean yield of the region in kg/ha.</li> <li>Median Error (<code>median_err_kg_ha</code>): The median error computed as the median over the yield errors (predicted_mean_yield - reported__mean_yield) of all study regions. Hereby the predicted and reported yield are the mean yield of the region in kg/ha.</li> <li>Root Mean Square Error (<code>rmse</code>): The root mean square error of the predicted and reported mean yields of all study regions in kg/ha.</li> <li>Relative RMSE (<code>rrmse</code>): In percent. Computed as <code>rmse / mean(reported_mean_yield) * 100</code></li> <li>R\u00b2 Score Scikit (<code>r2_scikit</code>): The R2 score of the predicted and reported mean yield per region. Computed as the coefficient of determination with scikit-learn</li> <li>R\u00b2 Score Excel (<code>r2_rsq_excel</code>): The R2 score of the predicted and reported mean yield per region. Computed as the quare of the Pearson product moment correlation coefficient , as implemented in the excel <code>RSQ</code> function See here.</li> </ul>"}]}