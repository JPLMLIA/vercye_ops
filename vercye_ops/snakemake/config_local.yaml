########################################
# Platform
platform: 'local'

########################################
# Simulation Parameters

# Directory containing each region. Update this for each new snakemake run
sim_study_head_dir: '/home/rohan/nasa-harvest/vercye/data/yielstudy_test'

# Id/Name that best describes the primary region of the simulation. Should not exceed 25 characters.
study_id: 'Poltava'  

# For each simulation APSIM generates a .db file. These take up a lot of space on disk. If you want to remove these files,
# after the pipeline finishes, set this to False.
keep_apsim_db_files: True

# Specify one or more simulations
regions:
  # - 'Chornukhynskyi'
  # - 'Chutivskyi'
  # - 'Dykanskyi'
  # - 'Hadiatskyi'
  # - 'Hlobynskyi'
  # - 'Hrebinkivskyi'
  # - 'Karlivskyi'
  # - 'Khorolskyi'
  # - 'Kobeliatskyi'
  # - 'Komsomolska'
  # - 'Kotelevskyi'
  # - 'Kozelshchynskyi'
  # - 'Kremenchutskyi'
  # - 'Lokhvytskyi'
  # - 'Lubenskyi'
  - 'Mashivskyi'
  # - 'Myrhorodskyi'
  # - 'Novosanzharskyi'
  # - 'Orzhytskyi'
  # - 'Poltavskyi'
  # - 'Pyriatynskyi'
  # - 'Reshetylivskyi'
  # - 'Semenivskyi'
  # - 'Shyshatskyi'
  # - 'Velykobahachanskyi'
  # - 'Zinkivskyi'

years:
  - 2021
  # - 2022
  # - 2023

timepoints:  # Days relative to harvest
  # - T-0
  - T-30
  # - T-60

########################################
# APSIM Parameters

apsim_params:
  met_source: 'NASA_POWER' # 'NASA_POWER' or 'ERA5'
  precipitation_source: 'NASA_POWER' # 'NASA_POWER' or 'CHIRPS'
  precipitation_agg_method: 'centroid' # 'mean' or 'centroid'. Mean is currently only supported for CHIRPS.
  fallback_precipitation: False # If True, will use NASA POWER precipitation data if region is out of bounds for CHIRPS data. Please be aware that changing this might make the precipitation data inconsistent.
  chirps_dir: '/home/rohan/nasa-harvest/vercye/data/chirps' # Only required to set if precipitation_source is 'CHIRPS'
  ee_project: '' # Earth Engine project name. Only required to set if met_source is 'ERA5'.
  time_bounds:
    2021:
      T-0:
        sim_start_date: '2020-08-20'
        sim_end_date: '2021-08-01'
        met_start_date: '1991-07-01'
        met_end_date: '2021-08-01'
      T-30:
        sim_start_date: '2020-08-20'
        sim_end_date: '2021-08-01'
        met_start_date: '1991-07-01'
        met_end_date: '2021-07-02'
      T-60:
        sim_start_date: '2020-08-20'
        sim_end_date: '2021-08-01'
        met_start_date: '1991-07-01'
        met_end_date: '2021-06-03'
    2022:
      T-0:
        sim_start_date: '2021-08-20'
        sim_end_date: '2022-07-27'
        met_start_date: '1992-07-01'
        met_end_date: '2022-07-27'
      T-30:
        sim_start_date: '2021-08-20'
        sim_end_date: '2022-07-27'
        met_start_date: '1992-07-01'
        met_end_date: '2022-06-28'
      T-60:
        sim_start_date: '2021-08-20'
        sim_end_date: '2022-07-27'
        met_start_date: '1992-07-01'
        met_end_date: '2022-05-29'
    2023:
      T-0:
        sim_start_date: '2022-08-20'
        sim_end_date: '2023-07-26'
        met_start_date: '1993-07-01'
        met_end_date: '2023-07-26'
      T-30:
        sim_start_date: '2022-08-20'
        sim_end_date: '2023-07-26'
        met_start_date: '1993-07-01'
        met_end_date: '2023-06-27'
      T-60:
        sim_start_date: '2022-08-20'
        sim_end_date: '2023-07-26'
        met_start_date: '1993-07-01'
        met_end_date: '2023-05-28'

# If using Docker, make sure to pull the docker image before executing this snakemake pipeline
apsim_execution:
  use_docker: False
  docker:
    image: 'apsiminitiative/apsimng'
    platform: 'linux/amd64'
  local: 
    executable_fpath: '/gpfs/data1/cmongp2/wronk/Builds/ApsimX/bin/Release/net6.0/Models'
    n_jobs: 7  # Number of threads to spawn. -1 is default in APSIM. Only change if you wish to control APSIM parallelization

########################################
# LAI parameters
lai_params:
  lai_dir: '/Volumes/red/NASA_Ag/LAI'
  lai_region: 'Poltava'
  lai_resolution: 20 # meters/pixel
  crop_name: 'wheat'  # "wheat", "maize"
  use_crop_adjusted_lai: True # If True, use crop-specific LAI adjustment. If False, use default LAI estimates
  lai_analysis_mode: 'raster'
  file_extension: 'tif' # File extension of the LAI data. Currently only supports 'tif' or 'vrt'
  time_bounds: 
    2021: 
      T-0: ['2020-08-20', '2021-08-01']
      T-30: ['2020-08-20', '2021-07-02']
      T-60: ['2020-08-20', '2021-06-03']
    2022: 
      T-0: ['2021-08-20', '2022-07-27']
      T-30: ['2021-08-20', '2022-06-28']
      T-60: ['2021-08-20', '2022-05-29']
    2023: 
      T-0: ['2022-08-20', '2023-07-26']
      T-30: ['2022-08-20', '2023-06-27']
      T-60: ['2022-08-20', '2023-05-28']
  crop_mask:
    2021: '/home/rohan/nasa-harvest/vercye/data/yieldstudy_20241108_except_db_modified/mock_cropmask.tif'
    2022: '/home/rohan/nasa-harvest/vercye/data/yieldstudy_20241108_except_db_modified/mock_cropmask.tif'
    2023: '/home/rohan/nasa-harvest/vercye/data/yieldstudy_20241108_except_db_modified/mock_cropmask.tif'
  do_cropmask_reprojection: False # If automatically determining the reference fails, manually reproject the cropmask, set the path above and set to False.

########################################
# Sim/Real Matching Parameters
    
matching_params:
  target_crs: 'EPSG:9854'  # For Poltava Oblast, Ukraine. Used in pixel area calculations during yield estimation

########################################
# Evaluation Parameters
eval_params:
  # Specify additional level on which to aggregate the yield estimates for evaluation
  # This is useful if you want to evaluate the yield estimates at a different level than the simulation level
  # The key can be any name you want, but the value must be th column name of the admin levels to aggregate
  aggregation_levels:
    National: 'Name_0'
    Oblast: 'Name_1'
  
########################################
# Local paths to the python/APSIM scripts

scripts:
  construct_met_files: '~/Builds/vercye_ops/vercye_ops/apsim/construct_met_files.py'
  plot_met_files: '~/Builds/vercye_ops/vercye_ops/apsim/generate_weather_report.py'
  fetch_met_data: '~/Builds/vercye_ops/vercye_ops/apsim/fetch_met_data.py'
  update_apsimx_template: '~/Builds/vercye_ops/vercye_ops/apsim/update_apsimx_template.py'
  constrain_lai_cropmask: '~/Builds/vercye_ops/vercye_ops/lai/0_mask_cropmask.py'
  check_region_has_cropland: '~/Builds/vercye_ops/vercye_ops/lai/0_validate_constrained_cropmask.py'
  lai_analysis: '~/Builds/vercye_ops/vercye_ops/lai/3_analysis_LAI.py'
  lai_quicklook: '~/Builds/vercye_ops/vercye_ops/lai/4_quicklook.py'
  match_sim_real: '~/Builds/vercye_ops/vercye_ops/matching_sim_real/match_sim_rs_lai.py'
  match_sim_real_quicklook: '~/Builds/vercye_ops/vercye_ops/matching_sim_real/generate_matching_report.py'
  generate_converted_lai_map: '~/Builds/vercye_ops/vercye_ops/matching_sim_real/generate_converted_lai_map.py'
  estimate_total_yield: '~/Builds/vercye_ops/vercye_ops/matching_sim_real/estimate_total_yield.py'
  aggregate_yield_estimates: '~/Builds/vercye_ops/vercye_ops/matching_sim_real/aggregate_yield_estimates.py'
  aggregate_maps : '~/Builds/vercye_ops/vercye_ops/matching_sim_real/aggregate_maps.py'
  generate_final_report: '~/Builds/vercye_ops/vercye_ops/matching_sim_real/generate_aggregated_final_report.py'
  generate_aggregated_lai_curves_plot: '~/Builds/vercye_ops/vercye_ops/matching_sim_real/generate_lai_plot.py'
  aggregate_met_stats: '~/Builds/vercye_ops/vercye_ops/matching_sim_real/aggregate_meteorological_stats.py'
  evaluate_yield_estimates: '~/Builds/vercye_ops/vercye_ops/matching_sim_real/evaluate_yield_estimates.py'
  aggregate_yield_estimates_per_eval_lvl: '../matching_sim_real/aggregate_yield_estimates_per_eval_lvl.py'
  construct_chirps_data: '~/Builds/vercye_ops/vercye_ops/apsim/construct_chirps_precipitation_files.py'
  reproject_cropmask: '~/Builds/vercye_ops/vercye_ops/lai/0_reproj_mask.py'
